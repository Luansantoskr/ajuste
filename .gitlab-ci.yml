image: node:8-stretch

variables:
  DIRECTORY: '/var/www/sig.fortbrasil.com.br/front'
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

stages:
  - build
  - deploy
  - sonarcloud-check

cache:
  key: '$CI_BUILD_REF_NAME'
  untracked: true
  paths:
    - './build'

# Roda os scripts de build
build:
  stage: build
  only:
    - master
  before_script:
    - yarn install
  script:
    - yarn run build

sonarcloud-check:
  stage: sonarcloud-check
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - merge_requests
    - master
    - develop

# Faz deploy para o servidor do rundeck
deploy:
  stage: deploy
  only:
    - master
  before_script:
    # Instala os utilitários
    - apt-get update && apt-get install -y bash openssh-client sshpass rsync dos2unix
    # Configura o SSH
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    # Converte para formatação Unix
    - dos2unix .rsync-filter
  script:
    - sshpass -p "$PASSWORD" rsync -e 'ssh -p 22210' -avuzpg --exclude-from '.rsync-filter' --delete build/ $CONNECTION:$DIRECTORY
    #- sshpass -p "$PASSWORD" ssh $CONNECTION sudo service nginx reload
